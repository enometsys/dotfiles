#!/bin/sh

# exit on first non-zero exit
set -e

# packages
packages=()

## Display
packages+=(
  # for graphics support
  "xf86-video-intel" "mesa"
  # for rendering the x system
  "xorg-server" "xorg-xrandr" 
  # for starting the window manager
  "xorg-xinit" 
  # used by dwm to render statusbar
  "xorg-xsetroot" 
  # used to test 3d rendering/gpu support (glxgears)
  "mesa-demos" 
  # used to render most fonts
  "xorg-fonts" "ttf-dejavu" 
  # used for locking screen when inactive
  "xautolock" 
  # used to generate graphics in lock screen
  "cowsay" "fortune-mod" 
)

## Audio system
packages+=(
  # low-level utilities to manage audio devices
  "alsa-utils" 
  # higher level utility to manage audio devices
  "pulseaudio-alsa" "pulseaudio-bluetooth" "pulseaudio-jack" 
  # frontend to pulseaudio
  "pavucontrol" 
)

## Inputs
packages+=(
  # used to create/render desktop notifications
  "libnotify" "dunst" 
  # used to bind actions in keyboard input
  "libinput" "xbindkeys" 
  # used to simulate keyboard input
  "xdotool" 
)

## Power managment
packages+=(
  # used to control keyboard backlight
  "acpilight" 
  # used for power mgt, specifically to query battery status
  "acpi" 
  # used to query and somewhat control machine status/power/cpu
  "powertop" "thermald" "cpupower" 
  # used for automatic power mgt for laptops
  "tlp" "tlp-rdw" 
)

## Network managment
packages+=(
  # used to manage network profiles/interfaces
  "networkmanager" 
  # uncomplicated firewall
  "ufw" 
  # utility to download files from the network
  "wget" "curl" "xh" "aria2" 
  # used to move files around (event w/in a network)
  "rsync" 
  # ssh package
  "openssh" 
)

## Security
package+=(
  # password management using GPG
  "pass" 
  # utility to managing yubikeys
  "yubikey-manager" 
)

## Bluetooth
packages+=(
  # bluetooth driver
  "bluez" 
  # cli bluetooth frontend
  "bluez-utils" 
  # GUI bluetooth frontend
  "blueman" 
)

## File system
packages+=(
  # utility to create XDG directorys in a user's home directory
  "xdg-user-dirs" 
  # GUI file manager. TODO: remove after mastering nnn
  "nautilus" 
  # driver and utilities to mount removable devices
  "udisks2" 
  # "udevil" 
  # utility to integrate mtp to file managers (together with jmtpfs, will enable mtp connection)
  "gvfs-mtp" 
  # utilities for managing windows file system (for dual boot and external harddrives)
  "exfat-utils" "ntfs-3g" 
  # utility more convinient than "coreutils/find"
  "ripgrep" "fd" 
  # terminal-based file manager
  "nnn" 
)

## Terminal Utilities
packages+=(
  # df and du alternatives
  "duf" "dust" 
  # Process visualization tool
  "bottom"
  # Container-images visualization tool
  "ctop" 
  # better altenative to bash
  "zsh" "zsh-completions" "zsh-syntax-highlighting"
  # cli utility for managing json and yaml
  "jo" "jq" "jless" "yq"
  # CLI for exploring and arranging tabular data (e.g. csv, xlsx)
  "visidata" "xsv" 
  # for rendeding directory tree as a tree (alternative to ls)
  "tree" 
  # utilities for managing compressed files
  "tar" "unrar" "unzip" 
  # main file editor (will be set as both $EDITOR and $VISUAL)
  "neovim" 
  # better "coreutils/cat" alternative
  "bat" 
  # markdown terminal presentation
  "glow" 
  # provides "gio trash" that is used by file managers (nnn)
  "glib2" 
  # better "procps-ng/top" alternative
  "htop" 
  # for displaying system specs
  "neofetch" 
  # for managing man pages
  "man-db" "man-pages" "tealdeer"
  # for managing clipboard
  "xclip" 
  # terminal multiplexer
  "tmux" 
  # calculator
  "bc" 
  # email management
  "himalaya" 
  # data progress through a pipe
  "pv" 
  # chat client
  "weechat" 
)

## Media
packages+=(
  # for creating screen shots
  "scrot" "flameshot"
  # screen recorder
  "simplescreenrecorder"
  # for rendering/viewing images
  "feh"
  # for playing videos
  "vlc"
  # for rendering images in terminal
  "viu" "catimg"
  # for decoding qrcodes from different inputs (camera or file)
  "zbar"
  # for encoding files to QR code
  "qrencode"
  # for viewing pdf, epubs
  "zathura" "zathura-pdf-mupdf"
  # music player
  "cmus"
)

## Development
packages+=(
  # VCS
  "git"
  # terminal-based workflow in github
  "github-cli"
  # for container managment
  "docker" 
  # terminal interface to k8s clusters. kubectx providers `kubens`
  "kubectl" "kubectx" "k9s"
  # env loader
  "direnv"
)

# install packages using pacman (run as root)
if type pacman  > /dev/null; then
  echo "Installing system packages using pacman: ${packages[@]}..."
  pacman -Syu --noconfirm ${packages[@]}

  # check for supported cameras
  # v4l2-ctl --list-devices
  # use camera to scan qr
  # zbarcam -1 --nodisplay

  # enable and start pcscd.socket (included by yubikey-manager>ccid>pcsclite package)
  # to support yubikey's CCID (smart card) mode
  # pcscd.socket and not pcscd.service is enabled so as to activate it only when needed
  systemctl enable --now pcscd.socket

  # enable and start - NetworkManager
  systemctl enable --now NetworkManager

  # enable and start - Bluetooth
  systemctl enable --now bluetooth

  # configure brightness control
  if [ ! -f /etc/X11/xorg.conf.d/20-intel.conf ]; then
    echo "Configuring intel brigtness control"
    tee /etc/X11/xorg.conf.d/20-intel.conf <<EOF
Section "Device"
	Identifier  "Intel Graphics"
	Driver      "intel"
	Option      "Backlight"  "intel_backlight"
EndSection
EOF
  fi

  # configure touchpad settings
  if [ ! -f /etc/X11/xorg.conf.d/30-touchpad.conf ]; then
    echo "Configuring intel brigtness control"
    tee /etc/X11/xorg.conf.d/30-touchpad.conf <<EOF
Section "InputClass"
	Identifier "touchpad"
	Driver "libinput"
	MatchIsTouchpad "on"
	Option "Tapping" "on"
	Option "ClickMethod" "clickfinger"
	Option "NaturalScrolling" "true"
EndSection
EOF
  fi

  # configure powersaving
  systemctl enable --now thermald
  systemctl enable --now tlp

  # mask rfkill for tlp-rdw to work properly
  systemctl mask systemd-rfkill.service
  systemctl mask systemd-rfkill.socket
fi
